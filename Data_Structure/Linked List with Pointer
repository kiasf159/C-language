#include<stdio.h>
#include<stdlib.h>

typedef int Element; 
typedef struct LinkedNode
{
	Element data;  
	struct LinkedNode* link;  
}Node;
Node* head = NULL;  

void init_list()  
{
	head = NULL;
}
int is_empty() 
{
	return head == NULL;
}
Node* get_entry(int pos)  
{
	Node *p = head;
	int i;
	for (i = 0; i < pos; i++, p = p->link)
	{
		if (p == NULL)
			return NULL;
	}
	return p;
}
int size()  
{
	Node* p;
	int count = 0;
	for (p = head; p != NULL; p = p->link)
	{
		count++;
	}
	return count;
}
Node* find(Element e)  
{
	Node* p;
	for (p = head; p != NULL; p = p->link)
	{
		if (p->data == e)
			return p;
	}
	return NULL;
}
void replace(int pos, Element e)  
{
	Node* node = get_entry(pos);
	if (node != NULL)
		node->data = e;
}

void insert_next(Node *before, Node *node)  
{
	if (node != NULL)
	{
		node->link = before->link;
		before->link = node;
	}
}
void insert(int pos, Element e)  
{
	Node *new_node, *prev;

	new_node = (Node*)malloc(sizeof(Node));
	new_node->data = e;
	new_node->link = NULL;

	if (pos == 0)
	{
		new_node->link = head;
		head = new_node;
	}
	else
	{
		prev = get_entry(pos - 1);
		if (prev != NULL)
			insert_next(prev, new_node);
		else free(new_node);
	}
}
Node* remove_next(Node *before)  
{
	Node* removed = before->link;
	if (removed != NULL)
		before->link = removed->link;
	return removed;
}
void Delete(int pos)  
{
	Node* prev, *removed;

	if (pos == 0 && is_empty() == 0) {
		removed = head;
		head = head->link;
		free(removed);
	}
	else
	{
		prev = get_entry(pos - 1);
		if (prev != NULL)
		{
			removed = remove_next(prev);
			free(removed);
		}
	}
}
void clear_list() 
{
	while (is_empty() == 0)
		Delete(0);
}

void print_list(char* msg)  
{
	Node* p;
	printf("%s[%2d]: ", msg, size());
	for (p = head; p != NULL; p = p->link)
		printf("%2d ", p->data);
	printf("\n");
}
void main()
{
	init_list();
	int input_number = 0;
	int replace_number = 0;
	int delete_number = 0;
	int temp = 0, temp2 = 0, temp3 = 0;
	printf("How much to put in : ");
	scanf_s("%d", &input_number);
	for (int i = 0; i < input_number; i++)
	{
		printf("Input Number : ");
		scanf_s("%d", &temp);
		insert(i, temp);
	}
	insert(size(), 1000);
	print_list("Array List : ");

	printf("Replace Location : ");
	scanf_s("%d", &replace_number);
	printf("Replace Value : ");
	scanf_s("%d", &temp2);
	replace(replace_number, temp2);
	print_list("Array List : ");

	while (1)
	{
		printf("Delete Location : ");
		scanf_s("%d", &delete_number);
		Delete(delete_number);
		print_list("Array List");
		printf("Anything else?(Input 0, Program Close.)");
		scanf_s("%d", &temp3);
		if (temp3 == 0)
			break;
	}
	clear_list();
	print_list("Default : ");
}
