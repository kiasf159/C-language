#include <iostream>
#include <stdlib.h>
using namespace std;

#define MAX_QUEUE_SIZE 100
typedef int Element;

void error(const char str[])
{
	fprintf(stderr, "%s\n", str);
	exit(1);
}

class Queue {
	Element data[MAX_QUEUE_SIZE];
	int front;
	int rear;
public:
	void init_queue()
	{
		front = rear = 0;
	}
	int is_empty()
	{
		return front == rear;
	}
	int is_full()
	{
		return (rear + 1) % MAX_QUEUE_SIZE == front;
	}
	int size()
	{
		return (rear - front + MAX_QUEUE_SIZE) % MAX_QUEUE_SIZE;
	}
	void enqueue(Element val)
	{
		if (is_full())
		{
			error("The Queue is Full!\n");
		}
		rear = (rear + 1) % MAX_QUEUE_SIZE;
		data[rear] = val;
	}
	Element dequeue()
	{
		if (is_empty())
		{
			error("The Queue is Empty!\n");
		}
		front = (front + 1) % MAX_QUEUE_SIZE;
		return data[front];
	}
	Element peek()
	{
		if (is_empty())
			error("The Queue is Empty!\n");
		return data[(front + 1) % MAX_QUEUE_SIZE];
	}
	void print_queue(const char msg[])
	{
		int i, maxi = rear;
		if (front >= rear)
		{
			maxi = maxi + MAX_QUEUE_SIZE;
		}
		cout << msg << "[" << size() << "]= ";
		for (i = front + 1; i <= maxi; i++)
		{
			cout << data[i%MAX_QUEUE_SIZE] << " ";
		}
		cout << endl;
	}
}q;

void main()
{
	q.init_queue();
	int temp = 0;
	int enqueue_number = 0;
	int dequeue_number = 0;
	int i;
	cout << "How much to put in : ";
	cin >> enqueue_number;
	for (i = 1; i <= enqueue_number; i++)
	{
		cout << "Input Number : ";
		cin >> temp;
		q.enqueue(temp);
	}
	q.print_queue("Enqueue Result : ");
	cout << "How much to pull out : ";
	cin >> dequeue_number;
	for (i = 1; i <= dequeue_number; i++)
	{
		cout << "\tDequeue(delete) : " << q.dequeue() << endl;
	}
	q.print_queue("Dequeue Result :");
}
