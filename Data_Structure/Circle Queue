#include <stdio.h>
#include <stdlib.h>
#define MAX_QUEUE_SIZE 100

typedef int Element;
Element data[MAX_QUEUE_SIZE];
int front;
int rear;

void error(char str[])
{
	printf("%s\n", str);
	exit(1);
}

void init_queue()
{
	front = rear = 0;
}

int is_empty()
{
	return front == rear;
}

int is_full()
{
	return front == (rear + 1) % MAX_QUEUE_SIZE;
}

int size()
{
	return (rear - front + MAX_QUEUE_SIZE) % MAX_QUEUE_SIZE;
}

void enqueue(Element val)
{
	if (is_full())
	{
		error("The Queue is Full!\n");
	}
	rear = (rear + 1) % MAX_QUEUE_SIZE;
	data[rear] = val;
}

Element dequeue()
{
	if (is_empty())
	{
		error("The Queue is Empty!\n");
	}
	front = (front + 1) % MAX_QUEUE_SIZE;
	return data[front];
}

Element peek()
{
	if (is_empty())
		error("The Queue is Empty!\n");
	return data[(front + 1) % MAX_QUEUE_SIZE];
}

void print_queue(char msg[])
{
	int i, maxi = rear;
	if (front >= rear)
	{
		maxi = maxi + MAX_QUEUE_SIZE;
	}
	printf("%s[%2d]= ", msg, size());
	for (i = front + 1; i <= maxi; i++)
	{
		printf("%2d ", data[i%MAX_QUEUE_SIZE]);
	}
	printf("\n");
}

void main()
{
	int temp = 0;
	int enqueue_number = 0;
	int dequeue_number = 0;
	int i;
	init_queue();
	printf("How much to put in : ");
	scanf_s("%d", &enqueue_number);
	for (i = 1; i <= enqueue_number; i++)
	{
		printf("Input Number : ");
		scanf_s("%d", &temp);
		enqueue(temp);
	}
	print_queue("Enqueue Result : ");
	printf("How much to pull out : ");
	scanf_s("%d", &dequeue_number);
	for (i = 1; i <= dequeue_number; i++)
	{
		printf("\tDequeue(delete) : %d\n", dequeue());
	}
	print_queue("Dequeue Result :");
}
